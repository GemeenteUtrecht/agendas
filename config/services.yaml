# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    api_documentation:
        servers:
        -   url: //agenda.zaakonline.nl/
            description: Sandbox server
        info:
            description: |
                Welkom innovator! <br> 
                Fijn dat je de tijd en moeite hebt genomen om je te verdiepen in dit component. Het "agenda" component is ontwikkeld voor de gemeente Utrecht en heeft als doel een agenda te koppelen aan objecten uit andere componenten. Dit stelt je in staat om aan deze objecten, afspraken en beschikbaarheid te kunnen beheren.
                
                # Ondersteuning
                Wordt lid van het slackkanaal [https://zaakonline.slack.com](https://zaakonline.slack.com) voor ondersteuning door het ontwikkel team. En regelmatige updates over de ontwikkelingen op het gebied van de zaakonline componenten.
                             
                # Common ground en open source
                Om het voor alle partijen zo makkelijk mogelijk te maken, stellen we zo veel mogelijk informatie over dit component openbaar beschikbaar.
                - [datamodel als pdf](/schema/datamodel.pdf)
                - [datamodel als mwb](/schema/datamodel.mwb)
                - [codebase op github](https://github.com/GemeenteUtrecht/agendas)
                - [codebase als zip](https://github.com/GemeenteUtrecht/agendas/archive/master.zip)
                - [docker container](https://hub.docker.com/r/huwelijksplanner/agendas-component)
                - [online demo](http://agenda.demo.zaakonline.nl/)

                # OpenAPI Specification
                Deze API is gedocumenteerd in het **OpenAPI format** 
                De API bevat Cross-Origin Resource Sharing (CORS) en is geïmplementeerd volgens de [W3C spec](https://www.w3.org/TR/cors/) standaarden. De API staat cross-domain communicatie van de browser toe. Alle responses hebben een "wildcard same-origin", dit maakt ze openbaar en dus toegankelijk voor iedereen. Dat geldt voor elke code, op elke site.
                
                # Filteren en Sorteren
                Het is mogelijk om resultaten van deze API te filteren aan de hand van query parameters, deze worden meegegeven in de url tijdens het aanroepen van een endpoint, door extra waarden toe te voegen na een vraagteken. Bijvoorbeeld: ?bronOrganisatie=12345689 (*volledige endpoint  /agenda?bronOrganisatie=12345689*), zorgt ervoor dat alleen agendas met bronOrganisatie (ofwel rsin/organisatie) 123456789 worden weergegeven.
                
                Voor het filteren op datum geldt dat er een weegmethode moet worden meegegeven. Voor deze waardes geldt dat elke door [PHP datetime](https://php.net/manual/en/datetime.construct.php) ondersteunde waarde kan worden gebruikt. Verschillende methoden kunnen worden gebruikt om een spreiding te selecteren (bijvoorbeeld: */agenda?wijzigingsdatum[after]=2019-01-01&wijzigingsdatum[before]=2019-02-01*, om alle agendas gewijzigd in Januari 2019 te selecteren.
                
                De mogelijke weegmethoden voor datum vergelijking zijn:
                 - after -> Data groter en gelijk aan
                 - before -> Data kleiner en gelijk aan
                 - strictly_after -> Data groter dan
                 - strictly_before -> Data kleiner dan                                               
                
                Daarnaast kunnen de resultaten ook worden gesorteerd, dit gaat aan de hand van de order parameter, gevolgd door desc (aflopend) of asc (oplopend). Er kunnen meerdere order parameters op volgorde van toepassing worden meegegeven (bijvoorbeeld https://agenda.demo.zaakonline.nl/agenda?order[bronOrganisatie]=desc&order[identificatie]=asc)
                
                Kijk voor meer details over de mogelijkheden voor filteren en sorteren bij de GET (verzamel) endpoint van de entiteit die je wilt ophalen.
                
                # Scopes
                Applicaties kunnen op deze API alleen wijzigingen uitvoeren waarvoor zij over de juiste rechten(scopes) beschikken. De op deze api verschikbare scopes zijn:
                 - agendas:schrijven
                 - agendas:lezen
                 - agendas:maken
                 - agendas:verwijderen
                 - taak:schrijven
                 - taak:lezen
                 - taak:maken
                 - taak:verwijderen
                 - afspraak:schrijven
                 - afspraak:lezen
                 - afspraak:maken
                 - afspraak:verwijderen
                 - beschikbaar:schrijven
                 - beschikbaar:lezen
                 - beschikbaar:maken
                 - beschikbaar:verwijderen
                 - applicatie:schrijven
                 - applicatie:lezen
                 - applicatie:maken
                 - applicatie:inloggen        
                         
                # Authentication
                Voor het gebruik van deze applicatie is een JWT Token nodig, deze hangt altijd vast aan een applicatie (ofwel user). Geldige JWT Tokens worden aangemaakt bij het registreren van een applicatie en kennen een beperkte houdbaarheid. 
                
                JWT Tokens kunnen zowel worden verlengd, als opnieuw worden aangevraagd, dit aan de hand van de applicatie id en sleutel.
                
                Let er bij het meegeven van JWT tokens op dat deze moet worden voorafgegaan door een Bearer en een spatie, onder de header Authorization. De volledig naam wordt daarmee: 'Authorization: Bearer [TOKEN]'.

            version: 0.0.1
            title: 'Agenda API'
            termsOfService: 'http://www.zaakonline.nl/terms/'
            contact:
                name: API Support
                email: support@conduction.nl
                url: https://github.com/ConductionNL/zaakonline
            x-logo:
                url: '/img/vng.svg'
                altText: VNG Realisatie
            license:
                name: EUPL 1.2
                url: 'https://opensource.org/licenses/EUPL-1.2'
        externalDocs:
            description: Vind hier meer informatie over de zaakonline code base.
            url: 'https://github.com/ConductionNL/zaakonline'
        tags:
              # The general endpoints  
            - name: Agenda
              description: "De agenda wordt gebruikt om een momenten in de tijd of een tijdspanne weer tegeven."
            - name: Taak
              description: "En taak of 'to do' binnen een agenda."
            - name: Afspraak
              description: "Een afspraak behorende bij een of meerdere agendas."
            - name: Beschikbaar
              description: "Een moment van beschikbaarheid behorende bij een of meerdere agendas, totale beschikbaarheid wordt berekend op agenda niveau door beschikbaarheid en afspraken met elkaar te vergelijken."
            - name: Applicatie
              description: "Een software applicatie binnen een organisatie die gebruik maakt van een component voor het creëren, ophalen, bijwerken of verwijderen van gegevens. Applicaties kunnen worden geregistreerd om namens een organisatie te handelen op een component. In deze zin zijn applicaties dan ook onderdeel van het beheerproces, infrastructuur en configuratie van een component in plaats van het datamodel dat door het component wordt geleverd."  
            #  Grouping the endopoint  
        x-tagGroups:
            - name: Agenda
              tags:
              - Agenda
              - Taak
              - Afspraak
              - Beschikbaar
              - Applicatie
              
        
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php, Client}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    
    App\Swagger\SwaggerDecorator:
        #decorates: 'api_platform.swagger.normalizer.documentation'
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments:
            - '@App\Swagger\SwaggerDecorator.inner'
            - '%api_documentation%'
        autoconfigure: false     
    
    # please note that last definitions always *replace* previous ones
    App\Subscriber\TablePrefixSubscriber:
        class: App\Subscriber\TablePrefixSubscriber
        arguments:
            - '%table_prefix%'
        tags: 
            - { name: doctrine.event_subscriber }
